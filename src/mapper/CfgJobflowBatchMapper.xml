<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.CfgJobflowBatchMapper">
  <resultMap id="BaseResultMap" type="pojo.CfgJobflowBatch">
    <result column="cfg_jobflow_id" jdbcType="VARCHAR" property="cfgJobflowId" />
    <result column="plan_start_time" jdbcType="VARCHAR" property="planStartTime" />
    <result column="batch" jdbcType="VARCHAR" property="batch" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="update_uset" jdbcType="VARCHAR" property="updateUset" />
    <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cfg_jobflow_id, plan_start_time, batch, description, create_user, create_time, update_uset, 
    update_time
  </sql>
  <select id="selectByExample" parameterType="pojo.CfgJobflowBatchExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cfg_jobflow_batch
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="pojo.CfgJobflowBatchExample">
    delete from cfg_jobflow_batch
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pojo.CfgJobflowBatch">
    insert into cfg_jobflow_batch (cfg_jobflow_id, plan_start_time, batch, 
      description, create_user, create_time, 
      update_uset, update_time)
    values (#{cfgJobflowId,jdbcType=VARCHAR}, #{planStartTime,jdbcType=VARCHAR}, #{batch,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{updateUset,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="pojo.CfgJobflowBatch">
    insert into cfg_jobflow_batch
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cfgJobflowId != null">
        cfg_jobflow_id,
      </if>
      <if test="planStartTime != null">
        plan_start_time,
      </if>
      <if test="batch != null">
        batch,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUset != null">
        update_uset,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cfgJobflowId != null">
        #{cfgJobflowId,jdbcType=VARCHAR},
      </if>
      <if test="planStartTime != null">
        #{planStartTime,jdbcType=VARCHAR},
      </if>
      <if test="batch != null">
        #{batch,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateUset != null">
        #{updateUset,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pojo.CfgJobflowBatchExample" resultType="java.lang.Long">
    select count(*) from cfg_jobflow_batch
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cfg_jobflow_batch
    <set>
      <if test="record.cfgJobflowId != null">
        cfg_jobflow_id = #{record.cfgJobflowId,jdbcType=VARCHAR},
      </if>
      <if test="record.planStartTime != null">
        plan_start_time = #{record.planStartTime,jdbcType=VARCHAR},
      </if>
      <if test="record.batch != null">
        batch = #{record.batch,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUset != null">
        update_uset = #{record.updateUset,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cfg_jobflow_batch
    set cfg_jobflow_id = #{record.cfgJobflowId,jdbcType=VARCHAR},
      plan_start_time = #{record.planStartTime,jdbcType=VARCHAR},
      batch = #{record.batch,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      update_uset = #{record.updateUset,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>